package com.tistory.comfy91.excuseme_android.feature.helper_sortimport android.util.Logimport androidx.recyclerview.widget.ItemTouchHelperimport androidx.recyclerview.widget.RecyclerViewimport com.tistory.comfy91.excuseme_android.data.CardBeanimport com.tistory.comfy91.excuseme_android.logDebug/** * Using in HelperSortActivity * For Drag & Drop */class DragManageAdapter(adapter: RealHelperSortAdapter, dragDirs: Int, swipeDirs: Int) :    ItemTouchHelper.SimpleCallback(dragDirs, swipeDirs) {    private var cardAdapter = adapter    private var fromPosition = -1    private var toPosition = -1    private var cardData = cardAdapter.data    private val temp = arrayListOf<CardBean>()    private val updateItem = mutableListOf<CardBean>()    override fun getDragDirs(recyclerView: RecyclerView, viewHolder: RecyclerView.ViewHolder): Int {        val direction = super.getDragDirs(recyclerView, viewHolder)        updateItem.clear()        updateItem.addAll(cardAdapter.data)        fromPosition = viewHolder.adapterPosition        Log.d("adapter", viewHolder.adapterPosition.toString())        "getDirs() (fromPosition: $fromPosition)"        "getDragDirs(): $direction".logDebug(this)        return direction    }    override fun getSwipeDirs(        recyclerView: RecyclerView,        viewHolder: RecyclerView.ViewHolder    ): Int {        val direction = super.getSwipeDirs(recyclerView, viewHolder)        fromPosition = viewHolder.adapterPosition        Log.d("adapter", viewHolder.adapterPosition.toString())        "getSwipeDirs(): ${super.getSwipeDirs(recyclerView, viewHolder)}"        return direction    }    override fun onSwiped(viewHolder: RecyclerView.ViewHolder, direction: Int) {}    override fun onMove(        recyclerView: RecyclerView,        viewHolder: RecyclerView.ViewHolder,        target: RecyclerView.ViewHolder    ): Boolean {        cardAdapter.notifyItemMoved(viewHolder.adapterPosition, target.adapterPosition)        return true    } // end onMove()    override fun clearView(recyclerView: RecyclerView, viewHolder: RecyclerView.ViewHolder) {        super.clearView(recyclerView, viewHolder)        toPosition = viewHolder.adapterPosition        "clearView() (toPosition:$toPosition)".logDebug(this)        "clearView() (fromPosition:$fromPosition)".logDebug(this)        "beforeSwap: $cardData".logDebug(this)        if (fromPosition < toPosition) {            for (i in fromPosition until toPosition) {                temp.add(updateItem[i])                updateItem[i] = updateItem[i + 1]                updateItem[i + 1] = temp[0]                temp.clear()            }        } else if (fromPosition > toPosition) {            for (i in fromPosition downTo toPosition + 1) {                temp.add(updateItem[i - 1])                updateItem[i - 1] = updateItem[i]                updateItem[i] = temp[0]                temp.clear()            }        }        cardAdapter.data.clear()        cardAdapter.data.addAll(updateItem)        "afterSwap: $cardData".logDebug(this)    }} // end class