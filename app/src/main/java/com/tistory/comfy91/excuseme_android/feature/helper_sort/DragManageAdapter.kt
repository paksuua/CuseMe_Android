package com.tistory.comfy91.excuseme_android.feature.helper_sortimport android.content.Contextimport android.util.Logimport androidx.recyclerview.widget.ItemTouchHelperimport androidx.recyclerview.widget.RecyclerViewimport com.tistory.comfy91.excuseme_android.logDebugimport kotlin.reflect.typeOf/** * Using in HelperSortActivity * For Drag & Drop */class DragManageAdapter (adapter: RealHelperSortAdapter, dragDirs: Int, swipeDirs: Int)    : ItemTouchHelper.SimpleCallback(dragDirs, swipeDirs){    var cardAdapter = adapter    private var fromPosition = -1    private var toPosition = -1    var cardData = cardAdapter.data    override fun getSwipeDirs(        recyclerView: RecyclerView,        viewHolder: RecyclerView.ViewHolder    ): Int {        val direction = super.getSwipeDirs(recyclerView, viewHolder)        fromPosition = viewHolder.adapterPosition        Log.d("adapter",viewHolder.adapterPosition.toString())        "getSwipeDirs(): ${super.getSwipeDirs(recyclerView, viewHolder)}"        return direction    }    override fun onSwiped(viewHolder: RecyclerView.ViewHolder, direction: Int) {    }    override fun onMove(        recyclerView: RecyclerView,        viewHolder: RecyclerView.ViewHolder,        target: RecyclerView.ViewHolder    ): Boolean {        "onMove() called".logDebug(this@DragManageAdapter)        Log.d("getFromPosition",fromPosition.toString())        cardAdapter.notifyItemMoved(viewHolder.adapterPosition, target.adapterPosition)//        cardAdapter.swapItems(viewHolder.adapterPosition, target.adapterPosition)        return true    } // end onMove()    override fun getMovementFlags(        recyclerView: RecyclerView,        viewHolder: RecyclerView.ViewHolder    ): Int {        val dragFlags: Int = ((ItemTouchHelper.UP.or(ItemTouchHelper.DOWN)).or(ItemTouchHelper.LEFT)).or(ItemTouchHelper.RIGHT)        val swipeFlags = 0        return makeMovementFlags(dragFlags,swipeFlags)    }    override fun clearView(recyclerView: RecyclerView, viewHolder: RecyclerView.ViewHolder) {        super.clearView(recyclerView, viewHolder)        fromPosition = viewHolder.layoutPosition        toPosition = viewHolder.adapterPosition        Log.d("toPosition", toPosition.toString())        Log.d("fromPosition", fromPosition.toString())        if (fromPosition < toPosition) {            for (i in fromPosition until toPosition) {                cardData[i] = cardData.set(i+1, cardData[i])            }        } else {            for (i in fromPosition..toPosition + 1) {                cardData!![i] = cardData!!.set(i-1, cardData!![i])            }        }    }} // end class